syntax = "proto3";

package book.v1;

option go_package = "github.com/ifls/apis/go/book";

import "google/protobuf/field_mask.proto";
import "google/protobuf/api.proto";
import "google/api/annotations.proto";

service BookService {
    // 标准方法
    rpc CreateBook(CreateBookRequest) returns (CreateBookResponse) {
        option (google.api.http) = {
            // The `parent` captures the parent resource name, such as "shelves/1".
            post: "/v1/books"
            body: "book"
        };
    }
    rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse) {}
    rpc GetBook(GetBookRequest) returns (Book) {}
    // 如何保证原子更新？
    rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse) {}
    rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {}

    // 非标准方法
    // 撤销删除，如果支持标记删除
    rpc UndeleteBook(UndeleteBookRequest) returns (UndeleteBookResponse) {}
    rpc SearchBook(SearchBookRequest) returns (SearchBookResponse) {}
    rpc BatchGetBook(BatchGetBookRequest) returns (BatchGetBookResponse) {}
}

message CreateBookRequest {
    Book book = 1;
}

message CreateBookResponse {
    string book_id = 1;
}

message DeleteBookRequest {
    string book_id = 1;
}

message DeleteBookResponse {
    bool success = 1;
}

message GetBookRequest {
    string book_id = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message BatchGetBookRequest {
    repeated string book_ids = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message BatchGetBookResponse {
    repeated Book books = 1;
}

message Book {
    string SNIC = 1;
    string name = 2;        // 书名
    string publisher = 3;   // 出版社
    int64 publish_duration = 4; // 出版日期
    
    Author author = 5; // 作者
    string version = 6;  // 版本

    float rate = 8; //评分
    int64 create_time = 9;
}

message Author {
    string name = 1;
    string english_name = 2;
}

message UpdateBookRequest {
    string user_id = 1;
    google.protobuf.FieldMask field_mask = 2;
}

message UpdateBookResponse {
    bool success = 1;
}

message ListBooksRequest {
    string order = 1;  // 和sql 语句的 一样
    string page_token = 2;
    int32 page_size = 3;
    string parent = 4;  // 父资源
}

message ListBooksResponse {
    repeated Book books = 1;
    string next_page_token = 2;
}

message UndeleteBookRequest {
    string book_id = 1;
}

message UndeleteBookResponse {
    bool success = 1;
}

message SearchBookRequest {

}

message SearchBookResponse {

}
